#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# configure environment
set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
shopt -s nullglob # allow file pattern to expand to null
unset GIT_DIR     # clean up leaking environment
# set -x          # enable debugging

function log() {
    echo "-----> $*"
}

function indent() {
    sed -e 's/^/       /'
}

# setup variables
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR="$(dirname "$(dirname "$0")")"
BUILDPACK_VARIABLES="TAILSCALE_BUILD_TS_TARGETARCH"

TAILSCALE_VERSION=1.74.0
PROXYCHAINS_VERSION=4.17
TAILSCALE_INSTALL_DIR="$BUILD_DIR/vendor/tailscale"
PC_INSTALL_DIR="$BUILD_DIR/vendor/proxychains-ng"

# Load any tailscale build environment variables for the application
# into the actual environment variables.
for env_file in $BUILDPACK_VARIABLES ; do
    [ -f "$ENV_DIR/$env_file" ] && export "$(basename "$env_file")=$(cat "$ENV_DIR/$env_file" 2>/dev/null)"
done

if [ -z "${TAILSCALE_BUILD_TS_TARGETARCH:-}" ] ; then
  export TAILSCALE_BUILD_TS_TARGETARCH=amd64
  log "No Tailscale architecture specified in TAILSCALE_BUILD_TS_TARGETARCH config var. Defaulting to $TAILSCALE_BUILD_TS_TARGETARCH."
else
  log "Using Tailscale architecture from TAILSCALE_BUILD_TS_TARGETARCH config var: $TAILSCALE_BUILD_TS_TARGETARCH"
fi

if [ -z "${TAILSCALE_BUILD_PROXYCHAINS_REPO:-}" ] ; then
  export TAILSCALE_BUILD_PROXYCHAINS_REPO="https://github.com/rofl0r/proxychains-ng.git"
  log "No ProxyChains repo specified in TAILSCALE_BUILD_PROXYCHAINS_REPO config var. Defaulting to $TAILSCALE_BUILD_PROXYCHAINS_REPO."
else
  log "Using ProxyChains repo from TAILSCALE_BUILD_PROXYCHAINS_REPO config var: $TAILSCALE_BUILD_PROXYCHAINS_REPO"
fi

log "Install Tailscale"
mkdir -p $TAILSCALE_INSTALL_DIR
export PATH="$TAILSCALE_INSTALL_DIR:$PATH"
curl -sL "https://pkgs.tailscale.com/stable/tailscale_${TAILSCALE_VERSION}_${TAILSCALE_BUILD_TS_TARGETARCH}.tgz" \
  | tar -zxf - -C "$TAILSCALE_INSTALL_DIR" --strip=1 tailscale_${TAILSCALE_VERSION}_${TAILSCALE_BUILD_TS_TARGETARCH}/tailscaled tailscale_${TAILSCALE_VERSION}_${TAILSCALE_BUILD_TS_TARGETARCH}/tailscale
chmod +x "$TAILSCALE_INSTALL_DIR/tailscale"
chmod +x "$TAILSCALE_INSTALL_DIR/tailscaled"
cp "$BUILDPACK_DIR/bin/heroku-tailscale-start.sh" "$TAILSCALE_INSTALL_DIR/heroku-tailscale-start.sh"
cp "$BUILDPACK_DIR/bin/heroku-tailscale-test.sh" "$TAILSCALE_INSTALL_DIR/heroku-tailscale-test.sh"
chmod +x "$TAILSCALE_INSTALL_DIR/heroku-tailscale-start.sh"
chmod +x "$TAILSCALE_INSTALL_DIR/heroku-tailscale-test.sh"
mkdir -p $BUILD_DIR/.profile.d
echo 'export PATH="/app/vendor/tailscale:$PATH"' >> $BUILD_DIR/.profile.d/heroku-tailscale-buildpack.sh

log "Install ProxyChains-ng"
PC_BUILD_DIR="$CACHE_DIR/proxychains-ng-$PROXYCHAINS_VERSION"
if [ ! -f "$PC_BUILD_DIR/proxychains4" ]; then  
  rm -rf $PC_BUILD_DIR  
  wget "https://github.com/rofl0r/proxychains-ng/archive/refs/tags/v$PROXYCHAINS_VERSION.tar.gz" -O $CACHE_DIR/proxychains.tar.gz
  cd $CACHE_DIR
  tar -zxvf $CACHE_DIR/proxychains.tar.gz
  cd $PC_BUILD_DIR
  make clean
  ./configure --libdir=/app/vendor/proxychains-ng
  make
fi
mkdir $PC_INSTALL_DIR
cp $PC_BUILD_DIR/libproxychains4.so $PC_BUILD_DIR/proxychains4 $BUILDPACK_DIR/conf/proxychains.conf $PC_INSTALL_DIR
echo 'export PATH="/app/vendor/proxychains-ng:$PATH"' >> $BUILD_DIR/.profile.d/heroku-tailscale-buildpack.sh

if [[ "${TAILSCALE_BUILD_EXCLUDE_START_SCRIPT_FROM_PROFILE_D:-}" != "True" ]]; then
  log "Configuring Tailscale to start when booting"
  # Add the line to start tailscale to the end of the file
  echo "/app/vendor/tailscale/heroku-tailscale-start.sh" >> $BUILD_DIR/.profile.d/heroku-tailscale-buildpack.sh
fi

log "Moving the tailscale_proxy into app/bin"
mkdir -p $BUILD_DIR/bin
cp "$BUILDPACK_DIR/bin/tailscale_proxy" $BUILD_DIR/bin/
chmod +x $BUILD_DIR/bin/tailscale_proxy

if [ -f "$BUILD_DIR/bin/rails" ]; then
  log "Rails app detected: Will replace bin/rails, bin/bundle, and bin/rake with passthrough scripts to tailscale_proxy"
  mv $BUILD_DIR/bin/rails $BUILD_DIR/bin/rails_original
  cp "$BUILDPACK_DIR/bin/rails/rails" $BUILD_DIR/bin/
  chmod +x $BUILD_DIR/bin/rails
  mv $BUILD_DIR/bin/bundle $BUILD_DIR/bin/bundle_original
  cp "$BUILDPACK_DIR/bin/rails/bundle" $BUILD_DIR/bin/
  chmod +x $BUILD_DIR/bin/bundle
  mv $BUILD_DIR/bin/rake $BUILD_DIR/bin/rake_original
  cp "$BUILDPACK_DIR/bin/rails/rake" $BUILD_DIR/bin/
  chmod +x $BUILD_DIR/bin/rake
fi